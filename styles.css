/* Reset e configurações base */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-color: #6366f1;
    --secondary-color: #8b5cf6;
    --accent-color: #f59e0b;
    --success-color: #10b981;
    --error-color: #ef4444;
    --text-primary: #1f2937;
    --text-secondary: #6b7280;
    --bg-primary: #ffffff;
    --bg-secondary: #f9fafb;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --border-radius: 12px;
    --border-radius-lg: 16px;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    color: var(--text-primary);
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    background-attachment: fixed;
    min-height: 100vh;
    position: relative;
    overflow-x: hidden;
}

/* IA Character - Personagem AI gigante ocupando toda altura da tela */
body::after {
    content: '';
    position: fixed;
    top: 0;
    right: -150px;
    width: 450px;
    height: 100vh;
    background-image: url('./images/ia.png');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: bottom right;
    opacity: 0.9;
    z-index: -1;
    animation: aiWatching 8s ease-in-out infinite;
    filter: drop-shadow(-15px 0 25px rgba(0, 0, 0, 0.4));
    transition: all 0.3s ease;
}

/* Efeito de "olhos brilhantes" da IA */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        url('./images/bg.png'),
        url('./images/Ruido.png');
    background-size: cover, 200px;
    background-position: center, top right;
    background-repeat: no-repeat, repeat;
    opacity: 0.1;
    z-index: -3;
}

/* Criar elemento para olhos brilhantes */
.ai-eyes {
    position: fixed;
    top: 35%;
    right: -80px;
    width: 10px;
    height: 10px;
    background: radial-gradient(circle, #00f5ff 0%, #0080ff 50%, transparent 70%);
    border-radius: 50%;
    opacity: 0.9;
    z-index: 0;
    animation: aiEyesGlow 3s ease-in-out infinite;
    box-shadow: 
        20px 12px 0 0 radial-gradient(circle, #00f5ff 0%, #0080ff 50%, transparent 70%),
        0 0 25px #00f5ff,
        20px 12px 25px #00f5ff;
}

@keyframes aiEyesGlow {
    0%, 100% { opacity: 0.6; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
}

/* Efeito de "observação" da IA */
@keyframes aiWatching {
    0%, 100% { 
        transform: scale(1) rotateY(0deg);
        right: -150px;
    }
    25% { 
        transform: scale(1.02) rotateY(-1deg);
        right: -145px;
    }
    50% { 
        transform: scale(0.98) rotateY(1deg);
        right: -155px;
    }
    75% { 
        transform: scale(1.01) rotateY(-0.5deg);
        right: -148px;
    }
}

/* Elemento decorativo flutuante adicional (código) */
.floating-code {
    content: '';
    position: fixed;
    top: 10%;
    left: 5%;
    width: 60px;
    height: 60px;
    background-image: url('./images/code.png');
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.3;
    animation: floatLeft 6s ease-in-out infinite;
    z-index: -1;
}

@keyframes floatLeft {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-15px) rotate(-3deg); }
}

@keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(5deg); }
}

/* Container principal */
.container {
    max-width: 500px;
    margin: 0 auto;
    padding: 2rem 1.5rem;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

/* Efeito de interação com a IA */
.container:hover ~ body::after {
    transform: scale(1.05);
    filter: drop-shadow(-15px 0 30px rgba(99, 102, 241, 0.5));
    right: -140px;
}

/* Efeito especial quando input está em foco */
#guessInput:focus ~ .ai-attention,
#guessInput:focus {
    animation: aiAttention 2s ease-in-out;
}

@keyframes aiAttention {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.08); }
}

/* Card principal do jogo */
.container > * {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: var(--border-radius-lg);
    padding: 2rem;
    margin-bottom: 1.5rem;
    box-shadow: var(--shadow-lg);
    width: 100%;
    text-align: center;
    transition: all 0.3s ease;
}

.container > *:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
}

/* Título principal */
h1 {
    font-family: 'Chakra Petch', monospace;
    font-size: 2.5rem;
    font-weight: 700;
    color: white;
    margin-bottom: 0.5rem;
    position: relative;
}

h1::before {
    content: '';
    position: absolute;
    top: -60px;
    left: 50%;
    transform: translateX(-50%);
    width: 90px;
    height: 90px;
    background-image: url('./images/robot.png');
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.8;
}

/* Parágrafo de instrução */
p {
    font-size: 1.1rem;
    color: var(--text-secondary);
    margin-bottom: 0;
}

/* Formulário */
#guessForm {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
    margin-bottom: 0;
}

/* Input */
#guessInput {
    width: 100%;
    max-width: 200px;
    padding: 1rem 1.5rem;
    font-size: 1.25rem;
    font-weight: 600;
    text-align: center;
    border: 2px solid #e5e7eb;
    border-radius: var(--border-radius);
    background: var(--bg-primary);
    color: var(--text-primary);
    transition: all 0.3s ease;
    box-shadow: var(--shadow-sm);
}

#guessInput:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    transform: scale(1.02);
}

#guessInput:hover {
    border-color: var(--primary-color);
}

/* Botões */
button {
    padding: 1rem 2rem;
    font-size: 1rem;
    font-weight: 600;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

button[type="submit"] {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: white;
    box-shadow: var(--shadow-md);
    min-width: 180px;
}

button[type="submit"]:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

button[type="submit"]:active {
    transform: translateY(0);
}

#resetButton {
    background: linear-gradient(135deg, var(--accent-color), #f97316);
    color: white;
    box-shadow: var(--shadow-md);
    min-width: 150px;
    display: none; /* Inicialmente oculto, será alterado para flex pelo JavaScript */
    align-items: center; /* Centralizar verticalmente */
    justify-content: center; /* Centralizar horizontalmente */
    text-align: center; /* Garantir centralização do texto */
}

#resetButton:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

/* Resultado */
#result {
    min-height: 60px;
    display: none; /* Inicialmente oculto */
    align-items: center;
    justify-content: center;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: var(--border-radius);
    padding: 1rem;
    margin-bottom: 0;
    position: relative;
    overflow: hidden;
}

#result.success {
    background: linear-gradient(135deg, var(--success-color), #059669);
    color: white;
    animation: celebration 0.6s ease-out;
}

#result.success::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(-50%);
    width: 30px;
    height: 30px;
    background-image: url('./images/trophy.png');
    background-size: contain;
    background-repeat: no-repeat;
}

#result.error {
    background: linear-gradient(135deg, var(--error-color), #dc2626);
    color: white;
    animation: shake 0.5s ease-out;
}

#result.hint {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
}

@keyframes celebration {
    0% { transform: scale(0.8) rotate(-5deg); opacity: 0; }
    50% { transform: scale(1.05) rotate(2deg); }
    100% { transform: scale(1) rotate(0deg); opacity: 1; }
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

/* Efeito de ripple nos botões */
button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s;
}

button:active::before {
    width: 200px;
    height: 200px;
}

/* Responsividade */
@media (max-width: 1200px) {
    /* IA um pouco menor em telas médias */
    body::after {
        width: 400px;
        right: -120px;
    }
    
    .ai-eyes {
        right: -70px;
        top: 32%;
    }
}

@media (max-width: 768px) {
    .container {
        padding: 1rem;
        max-width: 100%;
    }
    
    .container > * {
        padding: 1.5rem;
        margin-bottom: 1rem;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    h1::before {
        width: 60px;
        height: 60px;
        top: -35px;
    }
    
    #guessInput {
        font-size: 1.1rem;
        max-width: 180px;
    }
    
    button {
        padding: 0.875rem 1.5rem;
        font-size: 0.9rem;
        min-width: 150px;
        
    }
    
    #resetButton {
        min-width: 130px;
    }
    
    /* IA menor para tablet */
    body::after {
        width: 300px;
        right: -100px;
    }
    
    .ai-eyes {
        top: 30%;
        right: -50px;
        width: 6px;
        height: 6px;
        box-shadow: 
            15px 10px 0 0 radial-gradient(circle, #00f5ff 0%, #0080ff 50%, transparent 70%),
            0 0 20px #00f5ff,
            15px 10px 20px #00f5ff;
    }
    
    .floating-code {
        width: 50px;
        height: 50px;
        top: 8%;
        left: 3%;
    }
}

@media (max-width: 480px) {
    .container {
        padding: 0.5rem;
    }
    
    .container > * {
        padding: 1rem;
        border-radius: var(--border-radius);
    }
    
    h1 {
        font-size: 1.75rem;
    }
    
    h1::before {
        width: 25px;
        height: 25px;
    }
    
    p {
        font-size: 1rem;
    }
    
    #guessInput {
        font-size: 1rem;
        padding: 0.875rem 1.25rem;
        max-width: 160px;
    }
    
    button {
        padding: 0.75rem 1.25rem;
        font-size: 0.875rem;
        min-width: 130px;
    }
    
    #resetButton {
        min-width: 110px;
    }
    
    /* IA desaparece em mobile para melhor performance e usabilidade */
    body::after {
        display: none;
    }
    
    .ai-eyes {
        display: none;
    }
    
    .floating-code {
        display: none;
    }
}

/* Melhorias de acessibilidade */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
    
    body::after {
        animation: none;
    }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
    :root {
        --text-primary: #f9fafb;
        --text-secondary: #d1d5db;
        --bg-primary: rgba(17, 24, 39, 0.95);
        --bg-secondary: rgba(31, 41, 55, 0.95);
    }
    
    .container > * {
        background: var(--bg-primary);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    #guessInput {
        background: var(--bg-secondary);
        border-color: rgba(255, 255, 255, 0.2);
        color: var(--text-primary);
    }
}

/* Animação de entrada suave */
.container > * {
    animation: fadeInUp 0.6s ease-out backwards;
}

.container > *:nth-child(1) { animation-delay: 0.1s; }
.container > *:nth-child(2) { animation-delay: 0.2s; }
.container > *:nth-child(3) { animation-delay: 0.3s; }
.container > *:nth-child(4) { animation-delay: 0.4s; }
.container > *:nth-child(5) { animation-delay: 0.5s; }

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}